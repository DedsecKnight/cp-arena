[{"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\index.js":"1","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\App.js":"2","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Login.js":"3","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\store.js":"4","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\index.js":"5","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\auth.js":"6","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actionTypes.js":"7","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\auth.js":"8","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\CPArena.js":"9","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Navbar.js":"10","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\utilities\\setToken.js":"11","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Profile.js":"12","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Problemset.js":"13","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\navTab.js":"14","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\navTab.js":"15","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\submission.js":"16","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\submission.js":"17","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Snippet.js":"18","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\ProblemWriting.js":"19","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Problem.js":"20","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\CodeEditor.js":"21","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\ProtectedRoute.js":"22","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\utilities\\config.js":"23","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\CodeDisplay.js":"24","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\SubmitSolution.js":"25","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\alert.js":"26","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\Alert.js":"27","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\alert.js":"28","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Submission.js":"29","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Register.js":"30"},{"size":388,"mtime":1609342442467,"results":"31","hashOfConfig":"32"},{"size":273,"mtime":1609346343170,"results":"33","hashOfConfig":"32"},{"size":1848,"mtime":1615838447002,"results":"34","hashOfConfig":"32"},{"size":383,"mtime":1609343698966,"results":"35","hashOfConfig":"32"},{"size":262,"mtime":1610415785088,"results":"36","hashOfConfig":"32"},{"size":1555,"mtime":1615840181665,"results":"37","hashOfConfig":"32"},{"size":750,"mtime":1615839765429,"results":"38","hashOfConfig":"32"},{"size":1950,"mtime":1615839798372,"results":"39","hashOfConfig":"32"},{"size":2967,"mtime":1615838722357,"results":"40","hashOfConfig":"32"},{"size":1584,"mtime":1610055154991,"results":"41","hashOfConfig":"32"},{"size":207,"mtime":1609354635570,"results":"42","hashOfConfig":"32"},{"size":4389,"mtime":1611530988472,"results":"43","hashOfConfig":"32"},{"size":2251,"mtime":1610054960331,"results":"44","hashOfConfig":"32"},{"size":536,"mtime":1609553136531,"results":"45","hashOfConfig":"32"},{"size":257,"mtime":1609445116906,"results":"46","hashOfConfig":"32"},{"size":1894,"mtime":1609550673069,"results":"47","hashOfConfig":"32"},{"size":695,"mtime":1609550656865,"results":"48","hashOfConfig":"32"},{"size":8339,"mtime":1610595905083,"results":"49","hashOfConfig":"32"},{"size":12656,"mtime":1611531068873,"results":"50","hashOfConfig":"32"},{"size":5288,"mtime":1610583147281,"results":"51","hashOfConfig":"32"},{"size":735,"mtime":1610051176707,"results":"52","hashOfConfig":"32"},{"size":647,"mtime":1610050503770,"results":"53","hashOfConfig":"32"},{"size":681,"mtime":1610740982361,"results":"54","hashOfConfig":"32"},{"size":706,"mtime":1610071583199,"results":"55","hashOfConfig":"32"},{"size":4812,"mtime":1610740620473,"results":"56","hashOfConfig":"32"},{"size":435,"mtime":1610418407468,"results":"57","hashOfConfig":"32"},{"size":522,"mtime":1610558327195,"results":"58","hashOfConfig":"32"},{"size":352,"mtime":1610416941043,"results":"59","hashOfConfig":"32"},{"size":2762,"mtime":1610741907654,"results":"60","hashOfConfig":"32"},{"size":3073,"mtime":1615840046913,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"wqtji3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\index.js",[],["124","125"],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\App.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Login.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\store.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\index.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\auth.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actionTypes.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\auth.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\CPArena.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\utilities\\setToken.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Profile.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Problemset.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\navTab.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\navTab.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\submission.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\submission.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Snippet.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\ProblemWriting.js",["126"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { updateTab } from '../../actions/navTab'\r\nimport { addAlert } from '../../actions/alert';\r\nimport { PROBLEM_WRITING_TAB } from '../../utilities/config'\r\n\r\nconst ProblemWriting = ({ history, updateTab, addAlert }) => {\r\n    useEffect(() => {\r\n        updateTab(PROBLEM_WRITING_TAB);\r\n        if (testcases.length === 0) addTestCase();\r\n    }, [updateTab]);\r\n\r\n    const [formData, setForm] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        statement: \"\",\r\n        inputSpecification: \"\",\r\n        outputSpecification: \"\",\r\n        hint: [],\r\n        timelimit: '',\r\n        memorylimit: '',\r\n        testcases: [],\r\n        checkerRequired: false,\r\n        checkerCode: ''\r\n    });\r\n\r\n    const initialTestCase = {\r\n        inputFile: '',\r\n        outputFile: '',\r\n        isSampleCase: false,\r\n        explanation: ''\r\n    }\r\n\r\n    const addTestCase = () => {\r\n        setForm({...formData, testcases: [...formData.testcases, {...initialTestCase }]});\r\n    }\r\n    \r\n    const deleteTestCase = (idx) => {\r\n        const updated_testcase = formData.testcases;\r\n        if (updated_testcase.length === 1) {\r\n            addAlert(\"At least 1 test case is required\", \"danger\");\r\n            return;\r\n        }\r\n        updated_testcase.splice(idx, 1);\r\n        setForm({...formData, testcases: updated_testcase });\r\n    }\r\n\r\n    const addInput = (e, idx) => {\r\n        let case_list = formData.testcases\r\n        let curr_case = formData.testcases[idx];\r\n        curr_case.inputFile = e.target.files[0];\r\n        case_list[idx] = curr_case;\r\n        setForm({...formData, testcases: case_list});\r\n    }\r\n\r\n    const addOutput = (e, idx) => {\r\n        let case_list = formData.testcases\r\n        let curr_case = formData.testcases[idx];\r\n        curr_case.outputFile = e.target.files[0];\r\n        case_list[idx] = curr_case;\r\n        setForm({...formData, testcases: case_list});\r\n    }\r\n\r\n    const setSample = (e, idx) => {\r\n        let case_list = formData.testcases;\r\n        let curr_case = formData.testcases[idx];\r\n        curr_case.isSampleCase = e.target.checked;\r\n        case_list[idx] = curr_case;\r\n        setForm({...formData, testcases: case_list});\r\n    }\r\n\r\n    const updateExplanation = (e, idx) => {\r\n        let case_list = formData.testcases;\r\n        case_list[idx].explanation = e.target.value;\r\n        setForm({...formData, testcases: case_list});\r\n    }\r\n\r\n    const update = (e) => {\r\n        setForm({...formData, [e.target.name] : (e.target.type === 'checkbox' ? e.target.checked : e.target.value)});\r\n    }\r\n\r\n    const { \r\n        name,\r\n        difficulty,\r\n        statement, \r\n        checkerRequired, \r\n        inputSpecification,\r\n        outputSpecification,\r\n        testcases, \r\n        hint,\r\n        timelimit, \r\n        memorylimit,\r\n        checkerCode\r\n    } = formData;\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        if (testcases.length === 0) {\r\n            addAlert(\"At least 1 test case is required\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        if (checkerRequired && !checkerCode) {\r\n            addAlert(\"Cannot find checker script\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        const body = {\r\n            name,\r\n            difficulty,\r\n            statement,\r\n            inputSpecification,\r\n            outputSpecification,\r\n            hint,\r\n            timelimit,\r\n            memorylimit,\r\n            testcases: [],\r\n            sampleTestCases: [],\r\n            checkerRequired,\r\n        };\r\n\r\n        // const n = testcases.length;\r\n\r\n        for (let i = 0; i < testcases.length; i++) {\r\n            let curr_case = ({\r\n                input: '',\r\n                output: ''\r\n            });\r\n\r\n            let inputReader = new FileReader();\r\n            let outputReader = new FileReader();\r\n            \r\n            const { inputFile, outputFile, explanation, isSampleCase } = testcases[i];\r\n\r\n            if (!inputFile) {\r\n                addAlert(`Input data not found for test case ${i+1}`, 'danger');\r\n                return;\r\n            }\r\n            if (!outputFile) {\r\n                addAlert(`Output data not found for test case ${i+1}`, 'danger');\r\n                return;\r\n            }\r\n\r\n            const currIdx = i;\r\n\r\n            const read = async (idx) => {\r\n                if (idx === 0) {\r\n                    inputReader.onload = async (e) => {\r\n                        curr_case.input = e.target.result;\r\n                        try {\r\n                            await read(idx + 1);    \r\n                        } \r\n                        catch (error) {\r\n                            console.error(error.message);\r\n                        }\r\n                    }\r\n                    inputReader.readAsText(inputFile);\r\n                }\r\n                else {\r\n                    outputReader.onload = async (e) => {\r\n                        curr_case.output = e.target.result;\r\n                        body.testcases.push(curr_case);\r\n                        if (isSampleCase) {\r\n                            curr_case.explanation = explanation;\r\n                            body.sampleTestCases.push(curr_case);\r\n                        }\r\n                        if (currIdx === testcases.length-1) {\r\n                            if (body.sampleTestCases.length === 0) {\r\n                                addAlert(\"At least 1 sample test case is required\", \"danger\");\r\n                                return;\r\n                            }\r\n                            try {\r\n                                const config = { headers: { \"Content-Type\" : \"application/json\" }};\r\n                                await axios.post('http://localhost:5000/api/problems', body, config);\r\n                                addAlert(\"Problem added\", \"success\");\r\n                                history.push('/problemset');\r\n                            } \r\n                            catch (error) {\r\n                                error.response.data.errors.forEach(error => addAlert(error.msg, \"danger\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    outputReader.readAsText(outputFile);\r\n                }\r\n\r\n            };\r\n\r\n            try {\r\n                await read(0);\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const updateHint = (e, idx) => {\r\n        let hint_list = formData.hint;\r\n        hint_list[idx] = e.target.value;\r\n        setForm({...formData, hint: hint_list});\r\n    }\r\n\r\n    const addHint = () => {\r\n        setForm({...formData, hint: [...hint, \"\"]});\r\n    }\r\n\r\n    const deleteHint = (idx) => {\r\n        let hint_list = formData.hint;\r\n        hint_list.splice(idx, 1);\r\n        setForm({...formData, hint: hint_list});\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-3\">Propose a problem here</h2>\r\n            <form className=\"cparena-form\" onSubmit={e => submit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input value={name} onChange={e => update(e)} type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Problem name\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select name=\"difficulty\" className=\"form-control\" value={difficulty} onChange={e => update(e)} required>\r\n                        <option value=\"\" disabled>Choose a difficulty</option>\r\n                        <option value=\"easy\">Easy</option>\r\n                        <option value=\"normal\">Normal</option>\r\n                        <option value=\"hard\">Hard</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input placeholder=\"Time limit (seconds)\"required type=\"text\" pattern=\"[0-9]+\" name=\"timelimit\" value={timelimit} onChange={e => update(e)} className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input placeholder=\"Memory limit (MB)\" required type=\"text\" pattern=\"[0-9]+\" name=\"memorylimit\" value={memorylimit} onChange={e => update(e)} className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea name=\"statement\" required value={statement} onChange={e => update(e)} cols=\"30\" rows=\"10\" className=\"form-control\" placeholder=\"Problem Statement\"></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea name=\"inputSpecification\" value={inputSpecification} onChange={e => update(e)} cols=\"30\" rows=\"5\" className=\"form-control\" placeholder=\"Input description\"></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea name=\"outputSpecification\" value={outputSpecification} onChange={e => update(e)} cols=\"30\" rows=\"5\" className=\"form-control\" placeholder=\"Output description\"></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p className=\"lead\">Checker required:  <input type=\"checkbox\" name=\"checkerRequired\" checked={checkerRequired} onChange={e => update(e)}/> </p>\r\n                    <p className=\"lead\">Upload checker script</p>\r\n                    <input disabled={!checkerRequired && \"disabled\"} type=\"file\" className=\"form-control-file\" />\r\n                </div>\r\n                { testcases.map((testcase, idx)=> (\r\n                    <div key={idx} className=\"test-case\">\r\n                        <p className=\"lead\">Test case #{idx+1}</p>\r\n                        <p>\r\n                            Input file:  \r\n                            <input type=\"file\" onChange={e => addInput(e, idx)} className=\"form-control-file\" />\r\n                        </p>\r\n                        <p>\r\n                            Output file:  \r\n                            <input type=\"file\" onChange={e => addOutput(e, idx)} className=\"form-control-file\" />\r\n                        </p>\r\n                        {testcase.isSampleCase && (\r\n                            <div className=\"form-group\">\r\n                                <textarea placeholder=\"Add explanation for input and output\" value={testcase.explanation} onChange={e => updateExplanation(e, idx)} id=\"\" cols=\"30\" rows=\"5\" className=\"form-control\"></textarea>    \r\n                            </div>\r\n                        )}\r\n                        <div className=\"form-group case-action\">\r\n                            {idx === testcases.length-1 && (<button onClick={e => addTestCase()} className=\"btn\">Add new test case</button>)}\r\n                            <button onClick={e => deleteTestCase(idx)} className=\"btn btn-danger\">Delete Test Case #{idx+1}</button>\r\n                        </div>\r\n                        <p className=\"lead\">Is sample test cases: <input type=\"checkbox\" name=\"sample1\" value={testcase.isSampleCase} onChange={e => setSample(e, idx)}/> </p>\r\n                    </div>\r\n                )) }\r\n                { hint.length === 0 ? (\r\n                    <div className=\"form-group case-action\">\r\n                        <button onClick={e => addHint()} className=\"btn\">Add new hint</button>\r\n                    </div>\r\n                ) : \r\n                hint.map((h, idx) => (\r\n                    <div key={idx} className=\"hint\">\r\n                        <p className=\"lead\">Hint #{idx+1}</p>\r\n                        <textarea name=\"inputSpec\" cols=\"30\" rows=\"3\" value={h} onChange={e => updateHint(e, idx)} className=\"form-control\" placeholder={`Hint #${idx+1}`}></textarea>\r\n                        <div className=\"form-group case-action\">\r\n                            {idx === hint.length - 1 && (<button onClick={e => addHint()} className=\"btn\">Add new hint</button>)}\r\n                            <button onClick={e => deleteHint(idx)} className=\"btn btn-danger\">Delete Hint #{idx + 1}</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                }\r\n                <input type=\"submit\" className=\"btn btn-primary my-4\" />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProblemWriting.propTypes = {\r\n    updateTab: PropTypes.func.isRequired,\r\n    addAlert: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { updateTab, addAlert })(withRouter(ProblemWriting))\r\n","C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Problem.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\CodeEditor.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\ProtectedRoute.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\utilities\\config.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\CodeDisplay.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\SubmitSolution.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\reducers\\alert.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\utilities\\Alert.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\actions\\alert.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Submission.js",[],"C:\\Users\\miken\\Desktop\\Web Development\\cp-arena\\client\\src\\components\\layout\\Register.js",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":14,"column":8,"nodeType":"134","endLine":14,"endColumn":19,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addTestCase' and 'testcases.length'. Either include them or remove the dependency array.","ArrayExpression",["142"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [addTestCase, testcases.length, updateTab]",{"range":"145","text":"146"},[561,572],"[addTestCase, testcases.length, updateTab]"]